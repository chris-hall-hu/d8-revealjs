<?php

/**
 * @file
 * Functions to support theming in the Reveal theme.
 */

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function reveal_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if ($node->getType() == 'slideshow' || $node->getType() == 'slideset') {
      $suggestions[] = 'page__slides';
    }
  }
  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter(). 
 */
function reveal_theme_suggestions_html_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if ($node->getType() == 'slideshow' || $node->getType() == 'slideset') {
      $suggestions[] = 'html__slideshow';
    }
  }
  return $suggestions;
}

/**
 * Implement hook_preprocess_HOOK().
 */
function reveal_preprocess_paragraph(array &$variables) {
  $paragraph = $variables['paragraph'];
  if (!empty($paragraph->field_slide_background_image) && !$paragraph->field_slide_background_image->isEmpty()) {
    $background_image = $paragraph->field_slide_background_image;
    $variables['attributes']['data-background'] =  file_create_url($background_image->entity->getFileUri());
  }
  return;
}

/**
 * Implement hook_preprocess_HOOK().
 */
function reveal_preprocess_node(array &$variables) {
  $node = $variables['node'];  
  
  // Don't add any libraries for teasers.
  if ($variables['view_mode'] == 'teaser') {
    return;
  }
  
  //Add appropriate library.
  if ($node->getType() == 'slideshow') {
    $theme = $node->get('field_theme')->getValue();
    $variables['#attached']['library'][] = 'reveal/' . $theme[0]['value'];
  }
  if ($node->getType() == 'slideset') {
    $variables['#attached']['library'][] = 'reveal/reveal-theme-slideset';
  }
}